#TODO
#model 저장 및 불러오기
#라즈베리파이 카메라, 적외선 카메라 모듈 제어
#웹캠 영상을 jpg파일로 변환
#현재 영상에서 5초 전과 50%이상 픽셀값 변화시 model 작동
#jpg데이터 추가 수집
#overfitting 지점에서 모델 학습 중지
#else?

#Library 호출
from PIL import Image, ImageFilter
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers, models
img_size = 100      #사진 크기
train_size = 70     #Train데이터 갯수
test_size = 30      #Test데이터 갯수
epoch = 100         #학습횟수
Predict = 'C:/Users/sexmachine'       #predict할 jpg 파일 경로

#Label 배열 선언
Train_label = np.array([])
Test_label = np.array([])

#마스크 쓴 사람 데이터 호출
a1=Image.open('C:/Users/sungh/m/m_1.jpg')
a2=Image.open('C:/Users/sungh/m/m_2.jpg')
a3=Image.open('C:/Users/sungh/m/m_3.jpg')
a4=Image.open('C:/Users/sungh/m/m_4.jpg')
a5=Image.open('C:/Users/sungh/m/m_5.jpg')
a6=Image.open('C:/Users/sungh/m/m_6.jpg')
a7=Image.open('C:/Users/sungh/m/m_7.jpg')
a8=Image.open('C:/Users/sungh/m/m_8.jpg')
a9=Image.open('C:/Users/sungh/m/m_9.jpg')
a10=Image.open('C:/Users/sungh/m/m_10.jpg')
a11=Image.open('C:/Users/sungh/m/m_11.jpg')
a12=Image.open('C:/Users/sungh/m/m_12.jpg')
a13=Image.open('C:/Users/sungh/m/m_13.jpg')
a14=Image.open('C:/Users/sungh/m/m_14.jpg')
a15=Image.open('C:/Users/sungh/m/m_15.jpg')
a16=Image.open('C:/Users/sungh/m/m_16.jpg')
a17=Image.open('C:/Users/sungh/m/m_17.jpg')
a18=Image.open('C:/Users/sungh/m/m_18.jpg')
a19=Image.open('C:/Users/sungh/m/m_19.jpg')
a20=Image.open('C:/Users/sungh/m/m_20.jpg')
a21=Image.open('C:/Users/sungh/m/m_21.jpg')
a22=Image.open('C:/Users/sungh/m/m_22.jpg')
a23=Image.open('C:/Users/sungh/m/m_23.jpg')
a24=Image.open('C:/Users/sungh/m/m_24.jpg')
a25=Image.open('C:/Users/sungh/m/m_25.jpg')
a26=Image.open('C:/Users/sungh/m/m_26.jpg')
a27=Image.open('C:/Users/sungh/m/m_27.jpg')
a28=Image.open('C:/Users/sungh/m/m_28.jpg')
a29=Image.open('C:/Users/sungh/m/m_29.jpg')
a30=Image.open('C:/Users/sungh/m/m_30.jpg')
a31=Image.open('C:/Users/sungh/m/m_31.jpg')
a32=Image.open('C:/Users/sungh/m/m_32.jpg')
a33=Image.open('C:/Users/sungh/m/m_33.jpg')
a34=Image.open('C:/Users/sungh/m/m_34.jpg')
a35=Image.open('C:/Users/sungh/m/m_35.jpg')
a36=Image.open('C:/Users/sungh/m/m_36.jpg')
a37=Image.open('C:/Users/sungh/m/m_37.jpg')
a38=Image.open('C:/Users/sungh/m/m_38.jpg')
a39=Image.open('C:/Users/sungh/m/m_39.jpg')
a40=Image.open('C:/Users/sungh/m/m_40.jpg')
a41=Image.open('C:/Users/sungh/m/m_41.jpg')
a42=Image.open('C:/Users/sungh/m/m_42.jpg')
a43=Image.open('C:/Users/sungh/m/m_43.jpg')
a44=Image.open('C:/Users/sungh/m/m_44.jpg')
a45=Image.open('C:/Users/sungh/m/m_45.jpg')
a46=Image.open('C:/Users/sungh/m/m_46.jpg')
a47=Image.open('C:/Users/sungh/m/m_47.jpg')
a48=Image.open('C:/Users/sungh/m/m_48.jpg')
a49=Image.open('C:/Users/sungh/m/m_49.jpg')
a50=Image.open('C:/Users/sungh/m/m_50.jpg')

#마스크 안쓴 사람 데이터 호출
b1=Image.open('C:/Users/sungh/h/h_1.jpg')
b2=Image.open('C:/Users/sungh/h/h_2.jpg')
b3=Image.open('C:/Users/sungh/h/h_3.jpg')
b4=Image.open('C:/Users/sungh/h/h_4.jpg')
b5=Image.open('C:/Users/sungh/h/h_5.jpg')
b6=Image.open('C:/Users/sungh/h/h_6.jpg')
b7=Image.open('C:/Users/sungh/h/h_7.jpg')
b8=Image.open('C:/Users/sungh/h/h_8.jpg')
b9=Image.open('C:/Users/sungh/h/h_9.jpg')
b10=Image.open('C:/Users/sungh/h/h_10.jpg')
b11=Image.open('C:/Users/sungh/h/h_11.jpg')
b12=Image.open('C:/Users/sungh/h/h_12.jpg')
b13=Image.open('C:/Users/sungh/h/h_13.jpg')
b14=Image.open('C:/Users/sungh/h/h_14.jpg')
b15=Image.open('C:/Users/sungh/h/h_15.jpg')
b16=Image.open('C:/Users/sungh/h/h_16.jpg')
b17=Image.open('C:/Users/sungh/h/h_17.jpg')
b18=Image.open('C:/Users/sungh/h/h_18.jpg')
b19=Image.open('C:/Users/sungh/h/h_19.jpg')
b20=Image.open('C:/Users/sungh/h/h_20.jpg')
b21=Image.open('C:/Users/sungh/h/h_21.jpg')
b22=Image.open('C:/Users/sungh/h/h_22.jpg')
b23=Image.open('C:/Users/sungh/h/h_23.jpg')
b24=Image.open('C:/Users/sungh/h/h_24.jpg')
b25=Image.open('C:/Users/sungh/h/h_25.jpg')
b26=Image.open('C:/Users/sungh/h/h_26.jpg')
b27=Image.open('C:/Users/sungh/h/h_27.jpg')
b28=Image.open('C:/Users/sungh/h/h_28.jpg')
b29=Image.open('C:/Users/sungh/h/h_29.jpg')
b30=Image.open('C:/Users/sungh/h/h_30.jpg')
b31=Image.open('C:/Users/sungh/h/h_31.jpg')
b32=Image.open('C:/Users/sungh/h/h_32.jpg')
b33=Image.open('C:/Users/sungh/h/h_33.jpg')
b34=Image.open('C:/Users/sungh/h/h_34.jpg')
b35=Image.open('C:/Users/sungh/h/h_35.jpg')
b36=Image.open('C:/Users/sungh/h/h_36.jpg')
b37=Image.open('C:/Users/sungh/h/h_37.jpg')
b38=Image.open('C:/Users/sungh/h/h_38.jpg')
b39=Image.open('C:/Users/sungh/h/h_39.jpg')
b40=Image.open('C:/Users/sungh/h/h_40.jpg')
b41=Image.open('C:/Users/sungh/h/h_41.jpg')
b42=Image.open('C:/Users/sungh/h/h_42.jpg')
b43=Image.open('C:/Users/sungh/h/h_43.jpg')
b44=Image.open('C:/Users/sungh/h/h_44.jpg')
b45=Image.open('C:/Users/sungh/h/h_45.jpg')
b46=Image.open('C:/Users/sungh/h/h_46.jpg')
b47=Image.open('C:/Users/sungh/h/h_47.jpg')
b48=Image.open('C:/Users/sungh/h/h_48.jpg')
b49=Image.open('C:/Users/sungh/h/h_49.jpg')
b50=Image.open('C:/Users/sungh/h/h_50.jpg')

#이미지 가공을 위해서 temp에 이미지 저장
temp1=a1
temp2=b1
temp3=a2
temp4=b2
temp5=a3
temp6=b3
temp7=a4
temp8=b4
temp9=a5
temp10=b5
temp11=a6
temp12=b6
temp13=a7
temp14=b7
temp15=a8
temp16=b8
temp17=a9
temp18=b9
temp19=a10
temp20=b10
temp21=a11
temp22=b11
temp23=a12
temp24=b12
temp25=a13
temp26=b13
temp27=a14
temp28=b14
temp29=a15
temp30=b15
temp31=a16
temp32=b16
temp33=a17
temp34=b17
temp35=a18
temp36=b18
temp37=a19
temp38=b19
temp39=a20
temp40=b20
temp41=a21
temp42=b21
temp43=a22
temp44=b22
temp45=a23
temp46=b23
temp47=a24
temp48=b24
temp49=a25
temp50=b25
temp51=a26
temp52=b26
temp53=a27
temp54=b27
temp55=a28
temp56=b28
temp57=a29
temp58=b29
temp59=a30
temp60=b30
temp61=a31
temp62=b31
temp63=a32
temp64=b32
temp65=a33
temp66=b33
temp67=a34
temp68=b34
temp69=a35
temp70=b35
temp71=a36
temp72=b36
temp73=a37
temp74=b37
temp75=a38
temp76=b38
temp77=a39
temp78=b39
temp79=a40
temp80=b40
temp81=a41
temp82=b41
temp83=a42
temp84=b42
temp85=a43
temp86=b43
temp87=a44
temp88=b44
temp89=a45
temp90=b45
temp91=a46
temp92=b46
temp93=a47
temp94=b47
temp95=a48
temp96=b48
temp97=a49
temp98=b49
temp99=a50
temp100=b50


#temp 가공
temp1=temp1.resize((img_size, img_size))
temp1=temp1.convert('RGB')
temp1=np.array(temp1)
temp1=temp1.reshape((img_size, img_size, 3))
temp2=temp2.resize((img_size, img_size))
temp2=temp2.convert('RGB')
temp2=np.array(temp2)
temp2=temp2.reshape((img_size, img_size, 3))
temp3=temp3.resize((img_size, img_size))
temp3=temp3.convert('RGB')
temp3=np.array(temp3)
temp3=temp3.reshape((img_size, img_size, 3))
temp4=temp4.resize((img_size, img_size))
temp4=temp4.convert('RGB')
temp4=np.array(temp4)
temp4=temp4.reshape((img_size, img_size, 3))
temp5=temp5.resize((img_size, img_size))
temp5=temp5.convert('RGB')
temp5=np.array(temp5)
temp5=temp5.reshape((img_size, img_size, 3))
temp6=temp6.resize((img_size, img_size))
temp6=temp6.convert('RGB')
temp6=np.array(temp6)
temp6=temp6.reshape((img_size, img_size, 3))
temp7=temp7.resize((img_size, img_size))
temp7=temp7.convert('RGB')
temp7=np.array(temp7)
temp7=temp7.reshape((img_size, img_size, 3))
temp8=temp8.resize((img_size, img_size))
temp8=temp8.convert('RGB')
temp8=np.array(temp8)
temp8=temp8.reshape((img_size, img_size, 3))
temp9=temp9.resize((img_size, img_size))
temp9=temp9.convert('RGB')
temp9=np.array(temp9)
temp9=temp9.reshape((img_size, img_size, 3))
temp10=temp10.resize((img_size, img_size))
temp10=temp10.convert('RGB')
temp10=np.array(temp10)
temp10=temp10.reshape((img_size, img_size, 3))
temp11=temp11.resize((img_size, img_size))
temp11=temp11.convert('RGB')
temp11=np.array(temp11)
temp11=temp11.reshape((img_size, img_size, 3))
temp12=temp12.resize((img_size, img_size))
temp12=temp12.convert('RGB')
temp12=np.array(temp12)
temp12=temp12.reshape((img_size, img_size, 3))
temp13=temp13.resize((img_size, img_size))
temp13=temp13.convert('RGB')
temp13=np.array(temp13)
temp13=temp13.reshape((img_size, img_size, 3))
temp14=temp14.resize((img_size, img_size))
temp14=temp14.convert('RGB')
temp14=np.array(temp14)
temp14=temp14.reshape((img_size, img_size, 3))
temp15=temp15.resize((img_size, img_size))
temp15=temp15.convert('RGB')
temp15=np.array(temp15)
temp15=temp15.reshape((img_size, img_size, 3))
temp16=temp16.resize((img_size, img_size))
temp16=temp16.convert('RGB')
temp16=np.array(temp16)
temp16=temp16.reshape((img_size, img_size, 3))
temp17=temp17.resize((img_size, img_size))
temp17=temp17.convert('RGB')
temp17=np.array(temp17)
temp17=temp17.reshape((img_size, img_size, 3))
temp18=temp18.resize((img_size, img_size))
temp18=temp18.convert('RGB')
temp18=np.array(temp18)
temp18=temp18.reshape((img_size, img_size, 3))
temp19=temp19.resize((img_size, img_size))
temp19=temp19.convert('RGB')
temp19=np.array(temp19)
temp19=temp19.reshape((img_size, img_size, 3))
temp20=temp20.resize((img_size, img_size))
temp20=temp20.convert('RGB')
temp20=np.array(temp20)
temp20=temp20.reshape((img_size, img_size, 3))
temp21=temp21.resize((img_size, img_size))
temp21=temp21.convert('RGB')
temp21=np.array(temp21)
temp21=temp21.reshape((img_size, img_size, 3))
temp22=temp22.resize((img_size, img_size))
temp22=temp22.convert('RGB')
temp22=np.array(temp22)
temp22=temp22.reshape((img_size, img_size, 3))
temp23=temp23.resize((img_size, img_size))
temp23=temp23.convert('RGB')
temp23=np.array(temp23)
temp23=temp23.reshape((img_size, img_size, 3))
temp24=temp24.resize((img_size, img_size))
temp24=temp24.convert('RGB')
temp24=np.array(temp24)
temp24=temp24.reshape((img_size, img_size, 3))
temp25=temp25.resize((img_size, img_size))
temp25=temp25.convert('RGB')
temp25=np.array(temp25)
temp25=temp25.reshape((img_size, img_size, 3))
temp26=temp26.resize((img_size, img_size))
temp26=temp26.convert('RGB')
temp26=np.array(temp26)
temp26=temp26.reshape((img_size, img_size, 3))
temp27=temp27.resize((img_size, img_size))
temp27=temp27.convert('RGB')
temp27=np.array(temp27)
temp27=temp27.reshape((img_size, img_size, 3))
temp28=temp28.resize((img_size, img_size))
temp28=temp28.convert('RGB')
temp28=np.array(temp28)
temp28=temp28.reshape((img_size, img_size, 3))
temp29=temp29.resize((img_size, img_size))
temp29=temp29.convert('RGB')
temp29=np.array(temp29)
temp29=temp29.reshape((img_size, img_size, 3))
temp30=temp30.resize((img_size, img_size))
temp30=temp30.convert('RGB')
temp30=np.array(temp30)
temp30=temp30.reshape((img_size, img_size, 3))
temp31=temp31.resize((img_size, img_size))
temp31=temp31.convert('RGB')
temp31=np.array(temp31)
temp31=temp31.reshape((img_size, img_size, 3))
temp32=temp32.resize((img_size, img_size))
temp32=temp32.convert('RGB')
temp32=np.array(temp32)
temp32=temp32.reshape((img_size, img_size, 3))
temp33=temp33.resize((img_size, img_size))
temp33=temp33.convert('RGB')
temp33=np.array(temp33)
temp33=temp33.reshape((img_size, img_size, 3))
temp34=temp34.resize((img_size, img_size))
temp34=temp34.convert('RGB')
temp34=np.array(temp34)
temp34=temp34.reshape((img_size, img_size, 3))
temp35=temp35.resize((img_size, img_size))
temp35=temp35.convert('RGB')
temp35=np.array(temp35)
temp35=temp35.reshape((img_size, img_size, 3))
temp36=temp36.resize((img_size, img_size))
temp36=temp36.convert('RGB')
temp36=np.array(temp36)
temp36=temp36.reshape((img_size, img_size, 3))
temp37=temp37.resize((img_size, img_size))
temp37=temp37.convert('RGB')
temp37=np.array(temp37)
temp37=temp37.reshape((img_size, img_size, 3))
temp38=temp38.resize((img_size, img_size))
temp38=temp38.convert('RGB')
temp38=np.array(temp38)
temp38=temp38.reshape((img_size, img_size, 3))
temp39=temp39.resize((img_size, img_size))
temp39=temp39.convert('RGB')
temp39=np.array(temp39)
temp39=temp39.reshape((img_size, img_size, 3))
temp40=temp40.resize((img_size, img_size))
temp40=temp40.convert('RGB')
temp40=np.array(temp40)
temp40=temp40.reshape((img_size, img_size, 3))
temp41=temp41.resize((img_size, img_size))
temp41=temp41.convert('RGB')
temp41=np.array(temp41)
temp41=temp41.reshape((img_size, img_size, 3))
temp42=temp42.resize((img_size, img_size))
temp42=temp42.convert('RGB')
temp42=np.array(temp42)
temp42=temp42.reshape((img_size, img_size, 3))
temp43=temp43.resize((img_size, img_size))
temp43=temp43.convert('RGB')
temp43=np.array(temp43)
temp43=temp43.reshape((img_size, img_size, 3))
temp44=temp44.resize((img_size, img_size))
temp44=temp44.convert('RGB')
temp44=np.array(temp44)
temp44=temp44.reshape((img_size, img_size, 3))
temp45=temp45.resize((img_size, img_size))
temp45=temp45.convert('RGB')
temp45=np.array(temp45)
temp45=temp45.reshape((img_size, img_size, 3))
temp46=temp46.resize((img_size, img_size))
temp46=temp46.convert('RGB')
temp46=np.array(temp46)
temp46=temp46.reshape((img_size, img_size, 3))
temp47=temp47.resize((img_size, img_size))
temp47=temp47.convert('RGB')
temp47=np.array(temp47)
temp47=temp47.reshape((img_size, img_size, 3))
temp48=temp48.resize((img_size, img_size))
temp48=temp48.convert('RGB')
temp48=np.array(temp48)
temp48=temp48.reshape((img_size, img_size, 3))
temp49=temp49.resize((img_size, img_size))
temp49=temp49.convert('RGB')
temp49=np.array(temp49)
temp49=temp49.reshape((img_size, img_size, 3))
temp50=temp50.resize((img_size, img_size))
temp50=temp50.convert('RGB')
temp50=np.array(temp50)
temp50=temp50.reshape((img_size, img_size, 3))
temp51=temp51.resize((img_size, img_size))
temp51=temp51.convert('RGB')
temp51=np.array(temp51)
temp51=temp51.reshape((img_size, img_size, 3))
temp52=temp52.resize((img_size, img_size))
temp52=temp52.convert('RGB')
temp52=np.array(temp52)
temp52=temp52.reshape((img_size, img_size, 3))
temp53=temp53.resize((img_size, img_size))
temp53=temp53.convert('RGB')
temp53=np.array(temp53)
temp53=temp53.reshape((img_size, img_size, 3))
temp54=temp54.resize((img_size, img_size))
temp54=temp54.convert('RGB')
temp54=np.array(temp54)
temp54=temp54.reshape((img_size, img_size, 3))
temp55=temp55.resize((img_size, img_size))
temp55=temp55.convert('RGB')
temp55=np.array(temp55)
temp55=temp55.reshape((img_size, img_size, 3))
temp56=temp56.resize((img_size, img_size))
temp56=temp56.convert('RGB')
temp56=np.array(temp56)
temp56=temp56.reshape((img_size, img_size, 3))
temp57=temp57.resize((img_size, img_size))
temp57=temp57.convert('RGB')
temp57=np.array(temp57)
temp57=temp57.reshape((img_size, img_size, 3))
temp58=temp58.resize((img_size, img_size))
temp58=temp58.convert('RGB')
temp58=np.array(temp58)
temp58=temp58.reshape((img_size, img_size, 3))
temp59=temp59.resize((img_size, img_size))
temp59=temp59.convert('RGB')
temp59=np.array(temp59)
temp59=temp59.reshape((img_size, img_size, 3))
temp60=temp60.resize((img_size, img_size))
temp60=temp60.convert('RGB')
temp60=np.array(temp60)
temp60=temp60.reshape((img_size, img_size, 3))
temp61=temp61.resize((img_size, img_size)); 
temp61=temp61.convert('RGB'); 
temp61=np.array(temp61); 
temp61=temp61.reshape((img_size, img_size, 3)); 
temp62=temp62.resize((img_size, img_size)); 
temp62=temp62.convert('RGB'); 
temp62=np.array(temp62); 
temp62=temp62.reshape((img_size, img_size, 3)); 
temp63=temp63.resize((img_size, img_size)); 
temp63=temp63.convert('RGB'); 
temp63=np.array(temp63); 
temp63=temp63.reshape((img_size, img_size, 3)); 
temp64=temp64.resize((img_size, img_size)); 
temp64=temp64.convert('RGB'); 
temp64=np.array(temp64); 
temp64=temp64.reshape((img_size, img_size, 3)); 
temp65=temp65.resize((img_size, img_size)); 
temp65=temp65.convert('RGB'); 
temp65=np.array(temp65); 
temp65=temp65.reshape((img_size, img_size, 3)); 
temp66=temp66.resize((img_size, img_size)); 
temp66=temp66.convert('RGB'); 
temp66=np.array(temp66); 
temp66=temp66.reshape((img_size, img_size, 3)); 
temp67=temp67.resize((img_size, img_size)); 
temp67=temp67.convert('RGB'); 
temp67=np.array(temp67); 
temp67=temp67.reshape((img_size, img_size, 3)); 
temp68=temp68.resize((img_size, img_size)); 
temp68=temp68.convert('RGB'); 
temp68=np.array(temp68); 
temp68=temp68.reshape((img_size, img_size, 3)); 
temp69=temp69.resize((img_size, img_size)); 
temp69=temp69.convert('RGB'); 
temp69=np.array(temp69); 
temp69=temp69.reshape((img_size, img_size, 3)); 
temp70=temp70.resize((img_size, img_size)); 
temp70=temp70.convert('RGB'); 
temp70=np.array(temp70); 
temp70=temp70.reshape((img_size, img_size, 3)); 
temp71=temp71.resize((img_size, img_size)); 
temp71=temp71.convert('RGB'); 
temp71=np.array(temp71); 
temp71=temp71.reshape((img_size, img_size, 3)); 
temp72=temp72.resize((img_size, img_size)); 
temp72=temp72.convert('RGB'); 
temp72=np.array(temp72); 
temp72=temp72.reshape((img_size, img_size, 3)); 
temp73=temp73.resize((img_size, img_size)); 
temp73=temp73.convert('RGB'); 
temp73=np.array(temp73); 
temp73=temp73.reshape((img_size, img_size, 3)); 
temp74=temp74.resize((img_size, img_size)); 
temp74=temp74.convert('RGB'); 
temp74=np.array(temp74); 
temp74=temp74.reshape((img_size, img_size, 3)); 
temp75=temp75.resize((img_size, img_size)); 
temp75=temp75.convert('RGB'); 
temp75=np.array(temp75); 
temp75=temp75.reshape((img_size, img_size, 3)); 
temp76=temp76.resize((img_size, img_size)); 
temp76=temp76.convert('RGB'); 
temp76=np.array(temp76); 
temp76=temp76.reshape((img_size, img_size, 3)); 
temp77=temp77.resize((img_size, img_size)); 
temp77=temp77.convert('RGB'); 
temp77=np.array(temp77); 
temp77=temp77.reshape((img_size, img_size, 3)); 
temp78=temp78.resize((img_size, img_size)); 
temp78=temp78.convert('RGB'); 
temp78=np.array(temp78); 
temp78=temp78.reshape((img_size, img_size, 3)); 
temp79=temp79.resize((img_size, img_size)); 
temp79=temp79.convert('RGB'); 
temp79=np.array(temp79); 
temp79=temp79.reshape((img_size, img_size, 3)); 
temp80=temp80.resize((img_size, img_size)); 
temp80=temp80.convert('RGB'); 
temp80=np.array(temp80); 
temp80=temp80.reshape((img_size, img_size, 3)); 
temp81=temp81.resize((img_size, img_size)); 
temp81=temp81.convert('RGB'); 
temp81=np.array(temp81); 
temp81=temp81.reshape((img_size, img_size, 3)); 
temp82=temp82.resize((img_size, img_size)); 
temp82=temp82.convert('RGB'); 
temp82=np.array(temp82); 
temp82=temp82.reshape((img_size, img_size, 3)); 
temp83=temp83.resize((img_size, img_size)); 
temp83=temp83.convert('RGB'); 
temp83=np.array(temp83); 
temp83=temp83.reshape((img_size, img_size, 3)); 
temp84=temp84.resize((img_size, img_size)); 
temp84=temp84.convert('RGB'); 
temp84=np.array(temp84); 
temp84=temp84.reshape((img_size, img_size, 3)); 
temp85=temp85.resize((img_size, img_size)); 
temp85=temp85.convert('RGB'); 
temp85=np.array(temp85); 
temp85=temp85.reshape((img_size, img_size, 3)); 
temp86=temp86.resize((img_size, img_size)); 
temp86=temp86.convert('RGB'); 
temp86=np.array(temp86); 
temp86=temp86.reshape((img_size, img_size, 3)); 
temp87=temp87.resize((img_size, img_size)); 
temp87=temp87.convert('RGB'); 
temp87=np.array(temp87); 
temp87=temp87.reshape((img_size, img_size, 3)); 
temp88=temp88.resize((img_size, img_size)); 
temp88=temp88.convert('RGB'); 
temp88=np.array(temp88); 
temp88=temp88.reshape((img_size, img_size, 3)); 
temp89=temp89.resize((img_size, img_size)); 
temp89=temp89.convert('RGB'); 
temp89=np.array(temp89); 
temp89=temp89.reshape((img_size, img_size, 3)); 
temp90=temp90.resize((img_size, img_size)); 
temp90=temp90.convert('RGB'); 
temp90=np.array(temp90); 
temp90=temp90.reshape((img_size, img_size, 3)); 
temp91=temp91.resize((img_size, img_size)); 
temp91=temp91.convert('RGB'); 
temp91=np.array(temp91); 
temp91=temp91.reshape((img_size, img_size, 3)); 
temp92=temp92.resize((img_size, img_size)); 
temp92=temp92.convert('RGB'); 
temp92=np.array(temp92); 
temp92=temp92.reshape((img_size, img_size, 3)); 
temp93=temp93.resize((img_size, img_size)); 
temp93=temp93.convert('RGB'); 
temp93=np.array(temp93); 
temp93=temp93.reshape((img_size, img_size, 3)); 
temp94=temp94.resize((img_size, img_size)); 
temp94=temp94.convert('RGB'); 
temp94=np.array(temp94); 
temp94=temp94.reshape((img_size, img_size, 3)); 
temp95=temp95.resize((img_size, img_size)); 
temp95=temp95.convert('RGB'); 
temp95=np.array(temp95); 
temp95=temp95.reshape((img_size, img_size, 3)); 
temp96=temp96.resize((img_size, img_size)); 
temp96=temp96.convert('RGB'); 
temp96=np.array(temp96); 
temp96=temp96.reshape((img_size, img_size, 3)); 
temp97=temp97.resize((img_size, img_size)); 
temp97=temp97.convert('RGB'); 
temp97=np.array(temp97); 
temp97=temp97.reshape((img_size, img_size, 3)); 
temp98=temp98.resize((img_size, img_size)); 
temp98=temp98.convert('RGB'); 
temp98=np.array(temp98); 
temp98=temp98.reshape((img_size, img_size, 3)); 
temp99=temp99.resize((img_size, img_size)); 
temp99=temp99.convert('RGB'); 
temp99=np.array(temp99); 
temp99=temp99.reshape((img_size, img_size, 3)); 
temp100=temp100.resize((img_size, img_size)); 
temp100=temp100.convert('RGB'); 
temp100=np.array(temp100); 
temp100=temp100.reshape((img_size, img_size, 3)); 

#Lable 배열 값 추가
for i in range(1, train_size+1):
    Train_label = np.append(Train_label, np.array([i%2]))
for i in range(1, test_size+1):
    Test_label = np.append(Test_label, np.array([i%2]))

#Train 배열 만듦
temp = np.concatenate([temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10, temp11, temp12, temp13, temp14, temp15, temp16, temp17, temp18, temp19, temp20, temp21, temp22, temp23, temp24, temp25, temp26, temp27, temp28, temp29, temp30, temp31, temp32, temp33, temp34, temp35, temp36, temp37, temp38, temp39, temp40, temp41, temp42, temp43, temp44, temp45, temp46, temp47, temp48, temp49, temp50, temp51, temp52, temp53, temp54, temp55, temp56, temp57, temp58, temp59, temp60, temp61, temp62, temp63, temp64, temp65, temp66, temp67, temp68, temp69, temp70]     
                      , axis = 0)
Train_image = temp.reshape(train_size, img_size, img_size, 3)
Train_image = Train_image/255.0
temp = np.concatenate([temp71, temp72, temp73, temp74, temp75, temp76, temp77, temp78, temp79, temp80, temp81, temp82, temp83, temp84, temp85, temp86, temp87, temp88, temp89, temp90, temp91, temp92, temp93, temp94, temp95, temp96, temp97, temp98, temp99, temp100]
                      , axis = 0)
Test_image = temp.reshape(test_size, img_size, img_size, 3)
Test_image = Test_image/255.0

#학습 모델 생성
model = models.Sequential()
model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(img_size, img_size, 3)))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))

#모델 학습
model.compile(optimizer='rmsprop',
              loss='binary_crossentropy',
              metrics=['accuracy'])

model.fit(Train_image, Train_label, epochs=epoch)

#accuracy 테스트
test_loss, test_acc = model.evaluate(Test_image, Test_label, verbose=1)
print(test_acc)
test_loss, test_acc = model.evaluate(Test_image, Test_label, verbose=1)
print(test_acc)

#예측 데이터 가공
c2 = Image.open(Predict)
c2 = c2.convert('RGB')
c2 = c2.resize((img_size, img_size))
d2 = np.array(c2)
A = np.concatenate([d2], axis = 0)
H = A.reshape((1, img_size, img_size, 3))
H = H/255

#예측
prediction = model.predict(H)
print(prediction,'확률로 마스크를 착용하였습니다.')
